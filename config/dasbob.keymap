#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&behavior {
    // Left hand modifier behavior
    left_shift: left_shift {
        compatible = "zmk,behavior-hold-tap";
        label = "LEFT_SHIFT_MOD";
        bindings = <&kp>, <&kp LEFT_SHIFT>;
        #binding-cells = <2>;
        tapping-term-ms = <220>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <0>;
        release-after-ms = <0>;
        flavor = "balanced";
    };

    left_ctrl: left_ctrl {
        compatible = "zmk,behavior-hold-tap";
        label = "LEFT_CTRL_MOD";
        bindings = <&kp>, <&kp LEFT_CTRL>;
        #binding-cells = <2>;
        tapping-term-ms = <220>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <0>;
        release-after-ms = <0>;
        flavor = "balanced";
    };

    left_alt: left_alt {
        compatible = "zmk,behavior-hold-tap";
        label = "LEFT_ALT_MOD";
        bindings = <&kp>, <&kp LEFT_ALT>;
        #binding-cells = <2>;
        tapping-term-ms = <220>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <0>;
        release-after-ms = <0>;
        flavor = "balanced";
    };

    left_gui: left_gui {
        compatible = "zmk,behavior-hold-tap";
        label = "LEFT_GUI_MOD";
        bindings = <&kp>, <&kp LEFT_GUI>;
        #binding-cells = <2>;
        tapping-term-ms = <220>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <0>;
        release-after-ms = <0>;
        flavor = "balanced";
    };

    // Right hand modifier behavior
    right_shift: right_shift {
        compatible = "zmk,behavior-hold-tap";
        label = "RIGHT_SHIFT_MOD";
        bindings = <&kp>, <&kp RIGHT_SHIFT>;
        #binding-cells = <2>;
        tapping-term-ms = <220>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <0>;
        release-after-ms = <0>;
        flavor = "balanced";
    };

    right_ctrl: right_ctrl {
        compatible = "zmk,behavior-hold-tap";
        label = "RIGHT_CTRL_MOD";
        bindings = <&kp>, <&kp RIGHT_CTRL>;
        #binding-cells = <2>;
        tapping-term-ms = <220>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <0>;
        release-after-ms = <0>;
        flavor = "balanced";
    };

    right_alt: right_alt {
        compatible = "zmk,behavior-hold-tap";
        label = "RIGHT_ALT_MOD";
        bindings = <&kp>, <&kp RIGHT_ALT>;
        #binding-cells = <2>;
        tapping-term-ms = <220>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <0>;
        release-after-ms = <0>;
        flavor = "balanced";
    };

    right_gui: right_gui {
        compatible = "zmk,behavior-hold-tap";
        label = "RIGHT_GUI_MOD";
        bindings = <&kp>, <&kp RIGHT_GUI>;
        #binding-cells = <2>;
        tapping-term-ms = <220>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <0>;
        release-after-ms = <0>;
        flavor = "balanced";
    };
};

macros {
    repeat: repeat {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp NUMBER_2 &kp NUMBER_4 &kp NUMBER_2 &kp NUMBER_4 &kp NUMBER_2 &kp NUMBER_4>;
        label = "REPEAT";
    };

    snip: snip {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LSHFT &kp LEFT_GUI &kp S>;
        label = "SNIP";
    };

    lock: lock {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LEFT_GUI &kp L>;
        label = "LOCK";
    };
};

keymap {
    compatible = "zmk,keymap";

    // Base Layer
    Base {
        bindings = <&kp Q           &kp W            &kp E         &kp R             &kp T    &kp Y
                    &kp U            &kp I            &kp O                 &kp P
                    &hm LEFT_WIN A   &left_shift S   &left_ctrl D   &left_alt F  &kp G    &kp H
                    &hm LEFT_SHIFT J &right_ctrl K   &right_alt L        &right_gui SINGLE_QUOTE
                    &kp Z           &hm RIGHT_ALT X  &kp C         &kp V             &kp B    &kp N
                    &kp M            &kp COMMA        &hm RIGHT_ALT PERIOD  &kp SLASH
                    &lt 1 ESCAPE     &lt 2 SPACE       &kp TAB  &lt 4 ENTER  &lt 5 BACKSPACE  &lt 6 DELETE>;
    };

    // Layer 1 (Media Controls)
    layer_1 {
        bindings = <
            &to 7  &none  &none  &none  &none  &none
            &none  &none  &none  &none  &none  &none
            &none  &none  &none  &none  &none  &none
            &kp C_PREVIOUS    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT
            &none  &none  &none  &none  &none  &none
            &none  &none  &none  &kp C_STOP  &kp C_PLAY_PAUSE  &kp C_MUTE>;
    };

    // Layer 2 (Text Selection)
    layer_2 {
        bindings = <
            &none         &none          &none      &none           &none  &kp LC(Z)
            &kp LC(V)     &kp LC(C)       &kp LC(X)     &kp LC(Y)
            &kp LEFT_GUI  &kp LEFT_ALT   &kp LCTRL  &kp LEFT_SHIFT
            &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW &none
            &none         &kp RIGHT_ALT  &none      &none           &none  &kp INSERT
            &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END
            &none      &none           &none  &kp ENTER   &kp BACKSPACE   &kp DELETE>;
    };

        layer_3 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
              &none  &none  &none  &none  &none  &none
            >;
        };

        layer_4 {
            bindings = <
&kp LS(LEFT_BRACKET)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(RIGHT_BRACKET)  &none  &none           &none              &none          &none
&kp LS(SEMI)          &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp LS(NUMBER_6)  &kp LS(EQUAL)          &none  &kp LEFT_SHIFT  &kp RIGHT_CONTROL  &kp LEFT_ALT   &kp RIGHT_GUI
&kp LS(GRAVE)         &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(BACKSLASH)      &none  &none           &none              &kp RIGHT_ALT  &none
                                        &kp LS(NUMBER_9)  &kp LS(NUMBER_0)  &kp LS(MINUS)          &none  &none           &none
            >;
        };

        layer_5 {
            bindings = <
&kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET  &none  &none            &none      &none          &none
&kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL          &none  &kp RIGHT_SHIFT  &kp RCTRL  &kp LEFT_ALT   &kp RIGHT_GUI
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH      &none  &none            &none      &kp RIGHT_ALT  &none
                                &kp DOT       &kp NUMBER_0  &kp MINUS          &none  &none            &none
            >;
        };

        layer_6 {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9     &kp PRINTSCREEN  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2       &bt BT_SEL 3   &bt BT_SEL 4
&kp F11  &kp F4  &kp F5  &kp F6     &kp SCROLLLOCK   &bt BT_CLR    &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp LEFT_ALT   &kp RIGHT_WIN
&kp F10  &kp F1  &kp F2  &kp F3     &kp PAUSE_BREAK  &none         &none            &none              &kp RIGHT_ALT  &bt BT_CLR_ALL
                 &snip   &kp SPACE  &kp TAB          &none         &none            &none
            >;
        };

    // Layer 7 (default layer)
    layer_7 {
        bindings = <
            &kp Q  &kp W  &kp E    &kp R      &kp T    &kp Y      &kp U          &kp I      &kp O       &kp P
            &kp A  &kp S  &kp D    &kp F      &kp G    &kp H      &kp J          &kp K      &kp L       &kp SINGLE_QUOTE
            &kp Z  &kp X  &kp C    &kp V      &kp B    &kp N      &kp M          &kp COMMA  &kp PERIOD  &kp SLASH
            &kp ESC  &kp SPACE  &kp TAB  &kp ENTER  &kp BACKSPACE  &to 0>;
    };
};

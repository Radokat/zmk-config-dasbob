#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm_gui_l: {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_GUI_L";
            bindings = <&kp LEFT_GUI>, <&kp>;
            #binding-cells = <1>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        hm_alt_l: {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_ALT_L";
            bindings = <&kp LEFT_ALT>, <&kp>;
            #binding-cells = <1>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        hm_ctrl_l: {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_CTRL_L";
            bindings = <&kp LCTRL>, <&kp>;
            #binding-cells = <1>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        hm_shift_l: {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_SHIFT_L";
            bindings = <&kp LEFT_SHIFT>, <&kp>;
            #binding-cells = <1>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        hm_shift_r: {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_SHIFT_R";
            bindings = <&kp RIGHT_SHIFT>, <&kp>;
            #binding-cells = <1>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        hm_ctrl_r: {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_CTRL_R";
            bindings = <&kp RIGHT_CONTROL>, <&kp>;
            #binding-cells = <1>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        hm_alt_r: {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_ALT_R";
            bindings = <&kp RIGHT_ALT>, <&kp>;
            #binding-cells = <1>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        hm_gui_r: {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_GUI_R";
            bindings = <&kp RIGHT_GUI>, <&kp>;
            #binding-cells = <1>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };
    };

    macros {
        repeat: repeat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_2 &kp NUMBER_4 &kp NUMBER_2 &kp NUMBER_4 &kp NUMBER_2 &kp NUMBER_4>;
            label = "REPEAT";
        };

        snip: snip {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHFT &kp LEFT_GUI &kp S>;
            label = "SNIP";
        };

        lock: lock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp L>;
            label = "LOCK";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp Q           &kp W             &kp E           &kp R             &kp T    &kp Y          &kp U             &kp I            &kp O               &kp P
&hm_gui_l A     &hm_alt_l S       &hm_ctrl_l D    &hm_shift_l F     &kp G    &kp H          &hm_shift_r J     &hm_ctrl_r K     &hm_alt_r L         &hm_gui_r SINGLE_QUOTE
&kp Z           &hm_alt_r X       &kp C           &kp V             &kp B    &kp N          &kp M             &kp COMMA        &hm_alt_r PERIOD    &kp SLASH
                             &lt 1 ESCAPE  &lt 2 SPACE  &kp TAB  &lt 4 ENTER  &lt 5 BACKSPACE  &lt 6 DELETE
            >;
        };

        layer_1 {
            bindings = <
&to 7  &none  &none  &none  &none  &none       &none             &none              &none            &none
&none  &none  &none  &none  &none  &none       &kp C_PREVIOUS    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT
&none  &none  &none  &none  &none  &none       &none             &none              &none            &none
              &none  &none  &none  &kp C_STOP  &kp C_PLAY_PAUSE  &kp C_MUTE
            >;
        };

        layer_2 {
            bindings = <
&none         &none          &none      &none           &none  &kp LC(Z)   &kp LC(V)       &kp LC(C)       &kp LC(X)     &kp LC(Y)
&kp LEFT_GUI  &kp LEFT_ALT   &kp LCTRL  &kp LEFT_SHIFT  &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW &none
&none         &kp RIGHT_ALT  &none      &none           &none  &kp INSERT  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END
                             &none      &none           &none  &kp ENTER   &kp BACKSPACE   &kp DELETE
            >;
        };

        layer_3 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
              &none  &none  &none  &none  &none  &none
            >;
        };

        layer_4 {
            bindings = <
&kp LS(LEFT_BRACKET)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(RIGHT_BRACKET)  &none  &none           &none              &none          &none
&kp LS(SEMI)          &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp LS(NUMBER_6)  &kp LS(EQUAL)          &none  &kp LEFT_SHIFT  &kp RIGHT_CONTROL  &kp LEFT_ALT   &kp RIGHT_GUI
&kp LS(GRAVE)         &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(BACKSLASH)      &none  &none           &none              &kp RIGHT_ALT  &none
                                        &kp LS(NUMBER_9)  &kp LS(NUMBER_0)  &kp LS(MINUS)          &none  &none           &none
            >;
        };

        layer_5 {
            bindings = <
&kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET  &none  &none            &none      &none          &none
&kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL          &none  &kp RIGHT_SHIFT  &kp RCTRL  &kp LEFT_ALT   &kp RIGHT_GUI
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH      &none  &none            &none      &kp RIGHT_ALT  &none
                                &kp DOT       &kp NUMBER_0  &kp MINUS          &none  &none            &none
            >;
        };

layer_6 {
    bindings = <
&kp F12  &kp F7  &kp F8  &kp F9     &kp PRINTSCREEN  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2       &bt BT_SEL 3   &bt BT_SEL 4
&kp F11  &kp F4  &kp F5  &kp F6     &kp SCROLLLOCK   &bt BT_CLR    &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp LEFT_ALT   &kp RIGHT_WIN
&kp F10  &kp F1  &kp F2  &kp F3     &kp PAUSE_BREAK  &none         &none            &none              &kp RIGHT_ALT  &bt BT_CLR_ALL
                 &snip   &kp SPACE  &kp TAB          &none         &none            &none
    >;
};
